---
import { Icon } from 'astro-icon'

export interface Props {
	title: string;
	indexNavbar: number;
}

const { title, indexNavbar } = Astro.props;

const openRightBar = () => {
	console.log("Hello");
}
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<nav class="topBar">
			<span class="logo">
				<span class="text-gradient">RJRA</span>&gt<span class="coursor">_</span>
			</span>
			<div class="group">
				<button class="buttonDownload">
					<Icon width="20" pack="mdi" name="download"/>
					Descargar CV
				</button>
				<button class="buttonMenu" id="MenuOpenButton">
					<Icon width="30" pack="mdi" name="menu"/>
				</button>
				<span class="time">{new Date().getHours()}<span class="coursor time">:</span>{new Date().getMinutes()}</span>
			</div>
		</nav>
		<nav class="rightBar" id="rightBar">
			<button class="buttonCloseMenu" id="MenuCloseButton">
				<Icon width="30" pack="mdi" name="close"/>
			</button>
			<ul class="closeSideBar">
				<li class={indexNavbar === 0? "active" : ""}>Acerca de mi</li>
				<li class={indexNavbar === 1? "active" : ""}>Proyectos</li>
				<li class={indexNavbar === 2? "active" : ""}>Blog</li>
			</ul>
		</nav>
		<div class="content">
			<slot/>
		</div>
	</body>
</html>
<style is:global>
	:root {
		--accent: 124, 58, 237;
		--accent-gradient: linear-gradient(45deg, rgb(var(--accent)), #da62c4 30%, white 60%);
		--background-color: #fff;
		--primary-color: linear-gradient(45deg, rgb(var(--accent)), #da62c4 30%, white 60%);
		--secondary-color: #029FAA;
		--box-background: rgba(0, 0, 0, 0.05);

		--primary-text: rgba(255, 255, 255, 0.80);
		--primary-text__hover: rgba(255, 255, 255, 1);

		--secondary-text: rgba(0, 0, 0, 0.8);
		--secondary-text__hover: rgb(0, 0, 0);
	}
	*{
        margin: 0px;
		padding: 0px;
        text-decoration: none;
    }
	html {
		font-family: system-ui, sans-serif;
		background-color: var(--background-color);
	}
	code {
		font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
			Bitstream Vera Sans Mono, Courier New, monospace;
	}

	body{
		margin: auto;
		max-width: 75%;
		height: 100vh;
		display: grid;
		grid-template-columns: auto 50px;
		grid-template-rows: 100px auto;
	}

	/* TABLET LAYOURT */
	@media screen and (max-width: 1500px){
		body{
			max-width: 95%;
		}
	}

	/* MOBILE LAYOURT */
	@media screen and (max-width: 1000px){
		body{
			display: grid;
			grid-template-columns: auto 50px;
			grid-template-rows: 75px auto;
		}

		.time{
			display: none;
		}

		.buttonDownload{
			font-size: 12px;
			padding: 7px 12px;
		}

		.content{
			grid-column: 1 / 3;
		}

		.rightBar{
			position: absolute;
			top: 0px;
			right: 0px;
			bottom: 0px;
			left: 0px;
			width: auto;
			backdrop-filter: blur(5px);
			height: auto;
			writing-mode: horizontal-tb;
			display: none;
			justify-content: right;
		}

		.buttonCloseMenu, .buttonMenu{
			display: block;
		}
		
		.rightBar ul{
			padding: 0 50px;
			width: auto;
			height: auto;
			background-color:var(--background-color);
			box-shadow: 10px 0px 15px rgba(0, 0, 0, 0.255);
			border: solid 0.5px rgba(0, 0, 0, 0.292);
			border-radius: 15px;
			margin: 20px 10px;
		}
		.rightBar ul li{
			writing-mode: horizontal-tb;
		}
	}
</style>
<style>
	.content{
		display: grid;
		grid-column: 1 / 2;
		grid-row: 2 / 3;
		width: 100%;
		height: 100%;
		overflow-y: scroll;
		-ms-overflow-style: none;
  		scrollbar-width: none;
	}
	.content::-webkit-scrollbar{
		display: none;
	}

	/*
		TOP BAR STYLES
	*/
	.topBar{
		grid-column: 1 / 3;
		grid-row: 1 / 2;
		width: 100%;
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		align-items: center;
		background-color: var(--background-color);
	}
	.buttonDownload{
		background-color: var(--secondary-color);
		color: var(--primary-text);
		border: none;
		font-size: 14px;
		padding: 10px;
		border-radius: 30px;
		padding: 10px 25px;
		display: flex;
		justify-content: center;
		align-items: center;
	}

	.buttonMenu, .buttonCloseMenu{
		border: none;
		padding: 7px;
		justify-content: center;
		background: none;
		align-items: center;
		border-radius: 10px;
		cursor: pointer;
		display: none;
	}


	@keyframes backgroundBlurShowAnimation{
		0% {
			backdrop-filter: blur(5px);
		}
		100%{
			backdrop-filter: blur(0px);
		}
	}

	.buttonDownload:hover{
		opacity: 0.9;
		color: var(--primary-text__hover);
	}
	.logo{
		font-size: 20px;
		font-weight: 600;
	}
	.webSiteTitle{
		color: var(--accent-gradient);
	}
	.coursor{
		animation: blink-cursor 2000ms infinite normal;
	}

	.open{
		display: flex !important;
	}

	@keyframes blink-cursor{
		0%{color: white;}
		50%{color: black;}
		100%{color: white;}
	}
	.time{
		font-size: 20px;
		font-weight: 600;
	}
	.group{
		display: flex;
		flex-direction: row;
		align-items: center;
	}
	.group > span {
		margin-left: 100px;
	}
    .text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}

	[astro-icon="download"] {
        color: var(--primary-text);
        margin-right: 10px;
    }

	[astro-icon="menu"], [astro-icon="close"]{
        color: var(--secondary-text);
        margin-right: 10px;
    }

	/*
		RIGHT BAR STYLES
	*/

	.rightBar{
		display: grid;
		grid-column: 2 / 3;
		grid-row: 2 / 3;
		width: 100%;
		height: 100%;
	}

	.rightBar ul{
		list-style: none;
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		width: 100%;
		height: 100%;
	}

	.rightBar ul li{
		padding: 20px 10px;
		border-radius: 10px;
		writing-mode: vertical-rl;
		font-size: 15px;
		margin-bottom: 5px;
	}


	.rightBar ul li:hover{
		background-color: var(--box-background);
		cursor: pointer;
	}

	.active{
		background-color: var(--box-background);
	}
</style>
<script>
	let menu = document.querySelector('#rightBar');
	let toggleMenu = () => {
		console.log('Hola')
		menu?.classList.toggle('open');
	}
	document.querySelector('#MenuOpenButton')?.addEventListener('click', toggleMenu);
	document.querySelector('#MenuCloseButton')?.addEventListener('click', toggleMenu);
</script>
